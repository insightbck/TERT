# Scaffolding generated by Casein v5.1.1.5

module Casein
  class ContentPostsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Content posts'
  		@content_posts = ContentPost.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View content post'
      @content_post = ContentPost.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new content post'
    	@content_post = ContentPost.new
    end

    def create
      @content_post = ContentPost.new content_post_params
    
      if @content_post.save
        flash[:notice] = 'Content post created'
        redirect_to casein_content_posts_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new content post'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update content post'
      
      @content_post = ContentPost.find params[:id]
    
      if @content_post.update_attributes content_post_params
        flash[:notice] = 'Content post has been updated'
        redirect_to casein_content_posts_path
      else
        flash.now[:warning] = 'There were problems when trying to update this content post'
        render :action => :show
      end
    end
 
    def destroy
      @content_post = ContentPost.find params[:id]

      @content_post.destroy
      flash[:notice] = 'Content post has been deleted'
      redirect_to casein_content_posts_path
    end
  
    private
      
      def content_post_params
        params.require(:content_post).permit(:title, :body, :post_id, :summary, :permalink, :string, :created, :edited, :owner_id)
      end

  end
end